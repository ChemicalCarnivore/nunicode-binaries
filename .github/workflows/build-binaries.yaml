name: Cross-Compile for Multiple Architectures

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    name: Build Binaries
    strategy:
      matrix:
        platform: [linux-amd64, linux-arm64, win-amd64, osx-arm64]
        include:
          - platform: linux-amd64
            cross-compiler: gcc-x86-64-linux-gnu
            toolchain: Toolchain-Amd64.cmake
            lib-suffix: so
            os: ubuntu-latest
          - platform: linux-arm64
            cross-compiler: gcc-aarch64-linux-gnu
            toolchain: Toolchain-Arm64.cmake
            lib-suffix: so
            os: ubuntu-latest
          - platform: win-amd64
            cross-compiler: gcc-mingw-w64-x86-64
            toolchain: Toolchain-Mingw64.cmake
            lib-suffix: dll
            os: ubuntu-latest
          - platform: osx-arm64
            toolchain: Toolchain-Mac64.cmake
            lib-suffix: dylib
            os: macos-latest
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout this repository (nunicode-binaries)
      uses: actions/checkout@v4

    - name: Set up dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update

    - name: Install cross-compilers and dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install -y \
          ${{ matrix.cross-compiler }} \
          cmake

    - name: Checkout nunicode repository from Bitbucket (specific tag)
      run: |
        git clone https://bitbucket.org/alekseyt/nunicode.git
        cd nunicode
        git checkout 1.11

    - name: Copy cmake file and toolchain files from this repository
      run: |
        cp cmake/* nunicode/cmake/
        cp -f CMakeLists.txt nunicode/
        mkdir -p nunicode/include
        cp include/* nunicode/include/

    - name: Build for ${{ matrix.platform }}
      run: |
        cd nunicode/staging
        mkdir -p build_${{ matrix.platform }}
        (cd build_${{ matrix.platform }} && cmake ../.. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../../cmake/${{ matrix.toolchain }})
        (cd build_${{ matrix.platform }} && make VERBOSE=1 nusqlite3)

    - name: Upload binaries for ${{ matrix.platform }}
      uses: actions/upload-artifact@v4
      with:
        name: libnusqlite3-${{ matrix.platform }}
        path: nunicode/staging/build_${{ matrix.platform }}/sqlite3/libnusqlite3.${{ matrix.lib-suffix }}
